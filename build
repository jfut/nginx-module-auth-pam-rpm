#!/bin/bash
#
# Build RPM  with docker

set -e
set -u

DOCKER_RPMBUILD_DIR="/pkg/rpmbuild"
SPEC_FILE_NAME="nginx-module-auth-pam.spec"

SCRIPT_DIR=$(dirname $(readlink -f $0))
HOST_RPMBUILD_DIR="${SCRIPT_DIR}/rpmbuild"

PACKAGER="$(basename "${0}")"

DEBUG="no"

# Usage
usage() {
    cat << _EOF_
Usage:
    ${PACKAGER} [-d] [-h] BUILD_IMAGE_NAME:REPOSITORY:BUILD_IMAGE_TAG[:MODULE_VERSION]

    Options:
        -d Debug mode.

    Build for CentOS 8 + AppStream module:
        # ${PACKAGER} centos:8:appstream:1.14 (not supported)
        ${PACKAGER} centos:8:appstream:1.16
        ${PACKAGER} centos:8:appstream:1.18
        ${PACKAGER} centos:8:appstream:1.20

    Build for CentOS 8 + EPEL Stream module:
        ${PACKAGER} centos:8:epel-modular:mainline
        ${PACKAGER} centos:8:epel-modular:1.20

    Build for CentOS 7:
        ${PACKAGER} centos:7
_EOF_
}

setup_dir() {
    # Build directories
    for i in BUILD BUILDROOT RPMS SOURCES SPECS SRPMS tmp
    do
        DIR="${HOST_RPMBUILD_DIR}/${i}"
        if [[ ! -d "${DIR}" ]]; then
            mkdir "${DIR}"
        fi
    done
}

build() {
    local BUILD_ARGS="$1"

    local BUILD_IMAGE_NAME=$(echo ${BUILD_ARGS} | cut -d':' -f 1)
    local BUILD_IMAGE_TAG=$(echo ${BUILD_ARGS} | cut -d':' -f 2)
    local REPOSITORY=$(echo ${BUILD_ARGS} | cut -d':' -f 3)
    local MODULE_VERSION=$(echo ${BUILD_ARGS} | cut -d':' -f 4)

    local BUILD_IMAGE="${BUILD_IMAGE_NAME}:${BUILD_IMAGE_TAG}" 
    local BUILD_HOSTNAME="${BUILD_HOSTNAME:-${HOSTNAME}}"

    local DOCKER_OPTIONS=""
    local BUILD_CMD="$(dirname ${DOCKER_RPMBUILD_DIR})/build-rpm ${DOCKER_RPMBUILD_DIR} ${SPEC_FILE_NAME} ${REPOSITORY} ${MODULE_VERSION}"
    if [[ "${DEBUG}" = "yes" ]]; then
        echo "# Manual Build: ${BUILD_CMD}"
        DOCKER_OPTIONS="-it"
        BUILD_CMD="/bin/bash"
    fi

    # Update build image
    docker pull ${BUILD_IMAGE}

    # Build
    docker run \
        --name ${BUILD_HOSTNAME} \
        -h "${BUILD_HOSTNAME}" \
        -v "${SCRIPT_DIR}":$(dirname ${DOCKER_RPMBUILD_DIR}) \
        --rm=true \
        ${DOCKER_OPTIONS} \
        ${BUILD_IMAGE} \
        /bin/bash -c "${BUILD_CMD}"
}

# Main
main() {
    [[ $# -lt 1 ]] && usage && exit 1

    while getopts dh OPT; do
        case "${OPT}" in
            "d" )
                DEBUG="yes" ;;
            "h" )
                usage
                exit 0
                ;;
            * )
                usage
                exit 1
                ;;
        esac
    done
    shift $((OPTIND - 1))

    build "${@}"
}

[[ ${#BASH_SOURCE[@]} = 1 ]] && main "${@}"

